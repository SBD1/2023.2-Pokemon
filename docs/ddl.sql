BEGIN TRANSACTION;

CREATE TABLE
    LOCALIDADE (
        LOCALIZACAO serial PRIMARY KEY,
        NOME VARCHAR(50) NOT NULL,
        INFO VARCHAR(255) NOT NULL,
        MAPA VARCHAR(255) NOT NULL,
        CONSTRAINT sk_nome_local UNIQUE (nome)
    );

CREATE TABLE
    CAMINHO (
        SALA_ATUAL int NOT NULL,
        PROXIMA_SALA int NOT NULL,
        CONSTRAINT PK_CAMINHOS PRIMARY KEY (SALA_ATUAL, PROXIMA_SALA),
        CONSTRAINT FK_SALA_ATUAL FOREIGN KEY (SALA_ATUAL) REFERENCES LOCALIDADE (LOCALIZACAO),
        CONSTRAINT FK_PROXIMA_SALA FOREIGN KEY (PROXIMA_SALA) REFERENCES LOCALIDADE (LOCALIZACAO)
    );

CREATE TABLE
    TREINADOR (
        TREINADOR_ID serial PRIMARY KEY NOT NULL,
        NOME_TREINADOR VARCHAR(50) NOT NULL,
        SEXO CHAR(1) NOT NULL,
        LOCALIZACAO int NOT NULL,
        QUANT_INSIGNIAS int NOT NULL,
        QUANT_PK_CAPTURADOS int NOT NULL,
        DINHEIRO int NOT NULL,
        CONSTRAINT FK_LOCAL_TREINADOR FOREIGN KEY (LOCALIZACAO) REFERENCES LOCALIDADE (LOCALIZACAO)
    );

CREATE TABLE
    TIPO_ITEM (
        NOME_ITEM VARCHAR(60) PRIMARY KEY,
        TIPO_ITEM CHAR(1) NOT NULL
    );

CREATE TABLE
    ITEM_COMUM (
        NOME_ITEM VARCHAR(60) PRIMARY KEY,
        EFEITO VARCHAR(150),
        CONSTRAINT FK_ITEM_COMUM FOREIGN KEY (NOME_ITEM) REFERENCES TIPO_ITEM (NOME_ITEM)
    );

CREATE TABLE
    ITEM_CHAVE (
        NOME_ITEM VARCHAR(60) PRIMARY KEY,
        UTILIDADE VARCHAR(150),
        CONSTRAINT FK_ITEM_CHAVE FOREIGN KEY (NOME_ITEM) REFERENCES TIPO_ITEM (NOME_ITEM)
    );

CREATE TABLE
    FRUTA (
        NOME_ITEM VARCHAR(60) PRIMARY KEY,
        EFEITO VARCHAR(150),
        CONSTRAINT FK_ITEM_FRUTA FOREIGN KEY (NOME_ITEM) REFERENCES FRUTA (NOME_ITEM)
    );

CREATE TABLE
    TIPO (NOME_TIPO VARCHAR(15) PRIMARY KEY);

CREATE TABLE
    EFEITO (
        NOME_EFEITO VARCHAR(15) PRIMARY KEY,
        ACURACIA SMALLINT NOT NULL,
        DANO SMALLINT,
        INFO VARCHAR(150) NOT NULL
    );

CREATE TABLE
    HABILIDADE (
        HABILIDADE_ID serial PRIMARY KEY,
        NOME_HABILIDADE VARCHAR(20) NOT NULL,
        TIPO_DANO CHAR(1) NOT NULL,
        DANO SMALLINT,
        TIPO VARCHAR(15) NOT NULL,
        ACURACIA int NOT NULL,
        EFEITO VARCHAR(15),
        INFO VARCHAR(150) NOT NULL,
        CONSTRAINT SK_NOME_HABILIDADE UNIQUE (NOME_HABILIDADE),
        CONSTRAINT FK_TIPO FOREIGN KEY (TIPO) REFERENCES TIPO (NOME_TIPO) ON DELETE RESTRICT ON UPDATE CASCADE,
        CONSTRAINT FK_EFEITO FOREIGN KEY (EFEITO) REFERENCES EFEITO (NOME_EFEITO) ON DELETE RESTRICT ON UPDATE CASCADE
    );

CREATE TABLE
    TM (
        NOME_ITEM VARCHAR(60) PRIMARY KEY,
        HABILIDADE_ID int NOT NULL,
        CONSTRAINT FK_ITEM_TM FOREIGN KEY (NOME_ITEM) REFERENCES TIPO_ITEM (NOME_ITEM),
        CONSTRAINT HABILIDADE_FK FOREIGN KEY (HABILIDADE_ID) REFERENCES HABILIDADE (HABILIDADE_ID),
        CONSTRAINT SK_HABILIDADE UNIQUE (HABILIDADE_ID)
    );

CREATE TABLE
    POKEBOLA (
        NOME_ITEM VARCHAR(60) PRIMARY KEY,
        FORCA SMALLINT NOT NULL,
        CONSTRAINT CHECK_FORCA_BOLA CHECK (
            FORCA >= 0
            AND FORCA <= 100
        ),
        CONSTRAINT FK_ITEM_POKEBOLA FOREIGN KEY (NOME_ITEM) REFERENCES TIPO_ITEM (NOME_ITEM)
    );

CREATE TABLE
    MOCHILA (
        NOME_ITEM VARCHAR(60) NOT NULL,
        DONO int NOT NULL,
        QUANTIDADE SMALLINT NOT NULL,
        CONSTRAINT PK_MOCHILA PRIMARY KEY (NOME_ITEM),
        CONSTRAINT FK_DONO FOREIGN KEY (DONO) REFERENCES TREINADOR (TREINADOR_ID),
        CONSTRAINT FK_ITENS_MOCHILA FOREIGN KEY (NOME_ITEM) REFERENCES TIPO_ITEM (NOME_ITEM)
    );

CREATE TABLE
    POKEDEX (
        NUMERO_POKEDEX int PRIMARY KEY,
        NOME_POKEMON VARCHAR(20),
        TIPO1 VARCHAR(15) NOT NULL,
        TIPO2 VARCHAR(15),
        NIVEL_EVOLUCAO SMALLINT,
        TAXA_CAPTURA smallint NOT NULL,
        SOM_EMITIDO int NOT NULL,
        REGIAO VARCHAR(20) NOT NULL,
        INFO VARCHAR(100) NOT NULL,
        CAPTURADO VARCHAR(5) NOT NULL,
        CONSTRAINT UNQ_NOME_POKEMON UNIQUE (NOME_POKEMON),
        CONSTRAINT FK_TIPO1_POKEDEX FOREIGN KEY (TIPO1) REFERENCES TIPO (NOME_TIPO) ON DELETE RESTRICT ON UPDATE CASCADE,
        CONSTRAINT FK_TIPO2_POKEDEX FOREIGN KEY (TIPO2) REFERENCES TIPO (NOME_TIPO) ON DELETE RESTRICT ON UPDATE CASCADE
    );

CREATE TABLE
    EVOLUCAO (
        ANTERIOR int PRIMARY KEY,
        SUCESSOR int NOT NULL,
        CONSTRAINT UNQ_SUCESSOR UNIQUE (SUCESSOR),
        CONSTRAINT FK_ANTERIOR FOREIGN KEY (ANTERIOR) REFERENCES POKEDEX (NUMERO_POKEDEX) ON DELETE CASCADE,
        CONSTRAINT FK_SUCESSOR FOREIGN KEY (SUCESSOR) REFERENCES POKEDEX (NUMERO_POKEDEX) ON DELETE CASCADE
    );

CREATE TABLE
    REGISTRO_POKEDEX (
        NUMERO_POKEMON int NOT NULL,
        TREINADOR_ID int NOT NULL,
        CONSTRAINT PK_REGISTRO_POKEDEX PRIMARY KEY (NUMERO_POKEMON, TREINADOR_ID),
        CONSTRAINT FK_NUMERO_POKEDEX FOREIGN KEY (NUMERO_POKEMON) REFERENCES POKEDEX (NUMERO_POKEDEX),
        CONSTRAINT FK_TREINADOR_ID FOREIGN KEY (TREINADOR_ID) REFERENCES TREINADOR (TREINADOR_ID)
    );

CREATE TABLE
    POKEMON (
        POKEMON_ID serial PRIMARY KEY,
        NUMERO_POKEDEX int NOT NULL,
        TREINADOR_ID int,
        nome_pokemon_ins varchar(20),
        HABILIDADE1 int NOT NULL,
        HABILIDADE2 int,
        HABILIDADE3 int,
        HABILIDADE4 int,
        NATURE VARCHAR(15) NOT NULL,
        NIVEL smallint NOT NULL,
        HP smallint NOT NULL,
        DEFESA smallint NOT NULL,
        ATAQUE smallint NOT NULL,
        SP_ATAQUE smallint NOT NULL,
        SP_DEFESA smallint NOT NULL,
        VELOCIDADE smallint NOT NULL,
        SEXO CHAR(1) NOT NULL,
        XP SMALLINT NOT NULL,
        STATUS VARCHAR(20),
        POKEBOLA VARCHAR(60),
        ALTURA smallint NOT NULL,
        PESO smallint NOT NULL,
        LOCALIZACAO int,
        CONSTRAINT FK_LOCALIZACAO FOREIGN KEY (LOCALIZACAO) REFERENCES LOCALIDADE (LOCALIZACAO),
        CONSTRAINT FK_TREINADOR_ID FOREIGN KEY (TREINADOR_ID) REFERENCES TREINADOR (TREINADOR_ID),
        CONSTRAINT FK_CAPTURADO_POKEBOLA FOREIGN KEY (POKEBOLA) REFERENCES POKEBOLA (NOME_ITEM),
        CONSTRAINT FK_NUM_POKEDEX FOREIGN KEY (NUMERO_POKEDEX) REFERENCES POKEDEX (NUMERO_POKEDEX),
        CONSTRAINT FK_HABILIDADE1 FOREIGN KEY (HABILIDADE1) REFERENCES HABILIDADE (HABILIDADE_ID),
        CONSTRAINT FK_HABILIDADE2 FOREIGN KEY (HABILIDADE2) REFERENCES HABILIDADE (HABILIDADE_ID),
        CONSTRAINT FK_HABILIDADE3 FOREIGN KEY (HABILIDADE3) REFERENCES HABILIDADE (HABILIDADE_ID),
        CONSTRAINT FK_HABILIDADE4 FOREIGN KEY (HABILIDADE4) REFERENCES HABILIDADE (HABILIDADE_ID)
    );

CREATE TABLE
    EQUIPE (
        TREINADOR_ID int NOT NULL,
        POKEMON int NOT NULL,
        CONSTRAINT PK_EQUIPE PRIMARY KEY (TREINADOR_ID, POKEMON),
        CONSTRAINT FK_TREINADOR_ID FOREIGN KEY (TREINADOR_ID) REFERENCES TREINADOR (TREINADOR_ID),
        CONSTRAINT FK_POKEMON FOREIGN KEY (POKEMON) REFERENCES POKEMON (POKEMON_ID)
    );

CREATE TABLE
    BATALHA (
        BATALHA_ID serial,
        POKEMON1 int NOT NULL,
        POKEMON2 int NOT NULL,
        CONSTRAINT PK_BATALHA PRIMARY KEY (BATALHA_ID),
        CONSTRAINT FK_POKEMON1 FOREIGN KEY (POKEMON1) REFERENCES POKEMON (POKEMON_ID),
        CONSTRAINT FK_POKEMON2 FOREIGN KEY (POKEMON2) REFERENCES POKEMON (POKEMON_ID)
    );

CREATE TABLE
    NPC (
        NPC_ID serial PRIMARY KEY NOT NULL,
        LOCALIDADE int NOT NULL,
        SEXO VARCHAR(1) NOT NULL,
        INFO VARCHAR(150) NOT NULL,
        CONSTRAINT FK_LOCALIDADE FOREIGN KEY (LOCALIDADE) REFERENCES LOCALIDADE (LOCALIZACAO)
    );

CREATE TABLE
    LOOT (
        LOOT_ID serial PRIMARY KEY,
        NOME_ITEM VARCHAR(60) NOT NULL,
        QUANTIDADE int NOT NULL,
        LOCALIDADE int NOT NULL,
        CONSTRAINT FK_LOCALIDADE FOREIGN KEY (LOCALIDADE) REFERENCES LOCALIDADE (LOCALIZACAO)
    );

CREATE TABLE
    GINASIO (
        NOME_GINASIO VARCHAR(50) PRIMARY KEY,
        LIDER_ID int NOT NULL,
        TIPO1 VARCHAR(15) NOT NULL,
        TIPO2 VARCHAR(15),
        CIDADE int NOT NULL,
        LOOT int NOT NULL,
        CONSTRAINT FK_LIDER_ID FOREIGN KEY (LIDER_ID) REFERENCES NPC (NPC_ID),
        CONSTRAINT FK_TIPO1_GIN FOREIGN KEY (TIPO1) REFERENCES TIPO (NOME_TIPO),
        CONSTRAINT FK_TIPO2_GIN FOREIGN KEY (TIPO2) REFERENCES TIPO (NOME_TIPO),
        CONSTRAINT FK_CIDADE FOREIGN KEY (CIDADE) REFERENCES LOCALIDADE (LOCALIZACAO),
        CONSTRAINT FK_LOOT FOREIGN KEY (LOOT) REFERENCES LOOT (LOOT_ID)
    );

CREATE TABLE
    POKENPC (
        NPC_TREINADOR_ID int PRIMARY KEY,
        TREINADOR int not null,
        TIPO1 VARCHAR(15) NOT NULL,
        TIPO2 VARCHAR(15),
        LOCALIDADE int NOT NULL,
        GINASIO VARCHAR(50) NOT NULL,
        LOOT int,
        CONSTRAINT FK_GINASIO FOREIGN KEY (GINASIO) REFERENCES GINASIO (NOME_GINASIO),
        CONSTRAINT FK_TREINADOR FOREIGN KEY (TREINADOR) REFERENCES TREINADOR (TREINADOR_ID),
        CONSTRAINT FK_NPC_POKENPC FOREIGN KEY (NPC_TREINADOR_ID) REFERENCES NPC (NPC_ID),
        CONSTRAINT FK_LOCALIDADE FOREIGN KEY (LOCALIDADE) REFERENCES LOCALIDADE (LOCALIZACAO),
        CONSTRAINT FK_TIPO1_POKENPC FOREIGN KEY (TIPO1) REFERENCES TIPO (NOME_TIPO),
        CONSTRAINT FK_TIPO2_POKENPC FOREIGN KEY (TIPO2) REFERENCES TIPO (NOME_TIPO),
        CONSTRAINT FK_LOOT FOREIGN KEY (LOOT) REFERENCES LOOT (LOOT_ID)
    );

CREATE TABLE
    POKECENTER (
        POKECENTER_ID serial PRIMARY KEY,
        CURA_DISPONIVEL int,
        LOCALIDADE int NOT NULL,
        INFO VARCHAR(50),
        CONSTRAINT FK_LOCALIDADE FOREIGN KEY (LOCALIDADE) REFERENCES LOCALIDADE (LOCALIZACAO)
    );

CREATE TABLE
    ENFERMEIRA (
        POKECENTER_ID int,
        NPC_ID int,
        CONSTRAINT PK_ENFERMEIRA PRIMARY KEY (POKECENTER_ID, NPC_ID),
        CONSTRAINT FK_POKECENTER_ID FOREIGN KEY (POKECENTER_ID) REFERENCES POKECENTER (POKECENTER_ID),
        CONSTRAINT FK_NPC_ID FOREIGN KEY (NPC_ID) REFERENCES NPC (NPC_ID)
    );

CREATE TABLE
    POKEMART (
        POKEMART_ID int PRIMARY KEY,
        LOCALIDADE int NOT NULL,
        INFO VARCHAR(50),
        CONSTRAINT FK_LOCALIDADE FOREIGN KEY (LOCALIDADE) REFERENCES LOCALIDADE (LOCALIZACAO)
    );

CREATE TABLE
    LOJISTA (
        POKEMART_ID int,
        NPC_ID int,
        CONSTRAINT PK_LOJISTA PRIMARY KEY (POKEMART_ID, NPC_ID),
        CONSTRAINT FK_POKEMART_ID FOREIGN KEY (POKEMART_ID) REFERENCES POKEMART (POKEMART_ID),
        CONSTRAINT FK_NPC_ID FOREIGN KEY (NPC_ID) REFERENCES NPC (NPC_ID)
    );

CREATE TABLE
    CATALOGO_POKEMART (
        POKEMART_ID int,
        ITEM_NOME VARCHAR(60),
        QUANTIDADE int,
        PRECO int,
        CONSTRAINT PK_CATALOGO_POKEMART PRIMARY KEY (POKEMART_ID, ITEM_NOME),
        CONSTRAINT FK_POKEMART_ID FOREIGN KEY (POKEMART_ID) REFERENCES POKEMART (POKEMART_ID),
        CONSTRAINT FK_ITEM_NOME FOREIGN KEY (ITEM_NOME) REFERENCES Tipo_item (NOME_ITEM)
    );

COMMIT;
